package SeleniumIDE;// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class CreateaContractTest {
  private WebDriver driver;
  private WebDriverWait wait;
  @Before
  public void setUp() {
    String PATH = System.getProperty("user.dir");
    System.setProperty("webdriver.chrome.driver", PATH + "\\thirdparty\\chrome\\chromedriver.exe");
    driver = new ChromeDriver();
    wait = new WebDriverWait(driver,30);
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void createaContract() {
    // Test name: Create a Contract
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://login.salesforce.com/");
    // 2 | setWindowSize | 1050x660 | 
    driver.manage().window().maximize();
    // 3 | click | id=username | 
    driver.findElement(By.id("username")).click();
    // 4 | mouseOver | id=signup_link | 
    {
      WebElement element = driver.findElement(By.id("signup_link"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 5 | mouseOut | id=signup_link | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 6 | type | id=username | jorge@fundacionjala.com
    driver.findElement(By.id("username")).sendKeys("jorge@fundacionjala.com");
    // 7 | type | id=password | l2Cr0OnCfDxz1QRXUiet
    driver.findElement(By.id("password")).sendKeys("l2Cr0OnCfDxz1QRXUiet");
    // 8 | sendKeys | id=password | ${KEY_ENTER}
    driver.findElement(By.id("password")).sendKeys(Keys.ENTER);
    // 9 | click | css=.allTabsArrow | 
    driver.findElement(By.cssSelector(".allTabsArrow")).click();
    // 10 | click | linkText=Accounts |
    wait.until(ExpectedConditions.elementToBeClickable(By.linkText("Accounts")));
    driver.findElement(By.linkText("Accounts")).click();
    wait.until(ExpectedConditions.elementToBeClickable(By.id("tryLexDialogX")));
    driver.findElement(By.id("tryLexDialogX")).click();
    // 11 | click | name=new | 
    driver.findElement(By.name("new")).click();
    // 12 | click | id=acc2 |
    wait.until(ExpectedConditions.elementToBeClickable(By.id("acc2")));
    driver.findElement(By.id("acc2")).click();
    // 13 | type | id=acc2 | TestContract
    driver.findElement(By.id("acc2")).sendKeys("TestContract");
    // 14 | click | css=#bottomButtonRow > .btn:nth-child(1) | 
    driver.findElement(By.cssSelector("#bottomButtonRow > .btn:nth-child(1)")).click();
    // 15 | click | css=.allTabsArrow | 
    driver.findElement(By.cssSelector(".allTabsArrow")).click();
    // 16 | click | linkText=Contracts | 
    driver.findElement(By.linkText("Contracts")).click();
    // 17 | click | name=new | 
    driver.findElement(By.name("new")).click();
    // 18 | click | id=ctrc7 | 
    driver.findElement(By.id("ctrc7")).click();
    // 19 | type | id=ctrc7 | TestContract
    driver.findElement(By.id("ctrc7")).sendKeys("TestContract");
    // 20 | click | id=ctrc5 | 
    driver.findElement(By.id("ctrc5")).click();
    // 21 | type | id=ctrc5 | 7/12/2021
    driver.findElement(By.id("ctrc5")).sendKeys("7/12/2021");
    // 22 | click | css=tr:nth-child(6) > .last:nth-child(3) | 
    driver.findElement(By.cssSelector("tr:nth-child(6) > .last:nth-child(3)")).click();
    // 23 | click | id=ctrc40 | 
    driver.findElement(By.id("ctrc40")).click();
    // 24 | type | id=ctrc40 | 3
    driver.findElement(By.id("ctrc40")).sendKeys("3");
    // 25 | click | css=tr:nth-child(6) > .col02 | 
    driver.findElement(By.cssSelector("tr:nth-child(6) > .col02")).click();
    // 26 | click | css=#bottomButtonRow > .btn:nth-child(1) | 
    driver.findElement(By.cssSelector("#bottomButtonRow > .btn:nth-child(1)")).click();
    // 28 | click | name=del | 
    driver.findElement(By.name("del")).click();
    // 30 | webdriverChooseOkOnVisibleConfirmation |  | 
    driver.switchTo().alert().accept();
    // 31 | click | css=.allTabsArrow | 
    driver.findElement(By.cssSelector(".allTabsArrow")).click();
    // 32 | click | linkText=Accounts | 
    driver.findElement(By.linkText("Accounts")).click();
    // 33 | click | css=.first a | 
    driver.findElement(By.cssSelector(".first a")).click();
    // 35 | click | name=delete | 
    driver.findElement(By.name("delete")).click();
    // 37 | webdriverChooseOkOnVisibleConfirmation |  | 
    driver.switchTo().alert().accept();
    // 38 | click | id=userNav-arrow | 
    driver.findElement(By.id("userNav-arrow")).click();
    // 39 | click | linkText=Logout | 
    driver.findElement(By.linkText("Logout")).click();
  }
}
